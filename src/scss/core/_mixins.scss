@mixin mq($width, $type: min) {

  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);

    @if $type == max {
      $width: $width - 1px;
    }

    @media all and (#{$type}-width: $width) {
      @content;
    }
  }
}

@mixin resultRoot ($data, $theme: 'dark') {
  @each $property, $values in $data {
    --#{$property}: #{map_get($values, $theme)};
  }
}


@mixin fontApp($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
          svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
          otf: "opentype",
          ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-weight: $weight;
    font-family: quote($name);
    font-style: $style;
    src: $src;
  }
}